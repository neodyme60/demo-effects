dnl Process this file with autoconf to produce a configure script.
AC_INIT(COPPERBARS/copper.c)

AM_INIT_AUTOMAKE(The_Demo_Effects_Collection, 0.0.7)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB

dnl Checks for libraries.
AC_CHECK_LIB(pthread, pthread_exit, , [AC_MSG_ERROR([libpthread not found])],)

AC_CHECK_LIB(SDL, SDL_Quit, , [AC_MSG_ERROR([libSDL not found])],
         -lpthread)

AC_CHECK_LIB(SDL_image, IMG_Load, , [AC_MSG_ERROR([libSDL_image not found])], 
	-lpthread)

#AC_CHECK_LIB(SDL_mixer, Mix_OpenAudio, , [AC_MSG_ERROR([libSDL_mixer not found])], 
#	-lpthread)

AC_ARG_ENABLE(mikmod,
     [  --enable-mikmod    Turn on mikmod [default=yes]],
     [case "${enableval}" in
       yes) mikmod=true ;;
       no)  mikmod=false ;;
       *) AC_MSG_ERROR(bad value ${enableval} for --enable-mikmod) ;;
     esac],[mikmod=true])
AM_CONDITIONAL(MIKMOD, test x$mikmod = xtrue)

if test x$mikmod = xtrue; then
AC_CHECK_LIB(mikmod, load_mod, , [AC_MSG_ERROR([libmikmod not found])],
	-lpthread)
AC_CHECK_HEADERS(mikmod.h)
CFLAGS="$CFLAGS `libmikmod-config --cflags`"
LIBS="$LIBS `libmikmod-config --libs`"
else
echo "The use of the mikmod sound library is disabled "
echo "The Equalizer effect will not be build "
echo "run configure --enable-mikmod=yes to include mod support "
fi

AC_CHECK_LIB(m, abs, , [AC_MSG_ERROR([libm not found])],)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(SDL/SDL_image.h SDL/SDL.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST

dnl Checks for library functions.

dnl Get compile and linking flags
CFLAGS="$CFLAGS `sdl-config --cflags`"
LIBS="$LIBS `sdl-config --libs`"

AC_OUTPUT(Makefile STARFIELD/Makefile PLASMA/Makefile COPPERBARS/Makefile EXPLOSION/Makefile FIRE/Makefile CANDYBAR/Makefile 
SINUSSCROLLER/Makefile LENS/Makefile JUMPINGSCROLL/Makefile SHADEBOB/Makefile COMMON/Makefile BOBS/Makefile UNLIMITEDBOBS/Makefile ROTOZOOM/Makefile 
EQUALIZER/Makefile CIRCLESCROLLER/Makefile SINEWAVE/Makefile FLIPIMAGE/Makefile WATER/Makefile)
